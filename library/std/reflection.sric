

struct RComment {
    readonly var type: Int;
    readonly var content : raw*const Int8;
}

struct RField {
    readonly var flags : Int;
    readonly var comments : DArray$<RComment>;
    readonly var name : raw*const Int8;
    readonly var offset : Int;
    readonly var pointer : raw* Void;
    readonly var fieldType : raw*const Int8;
    readonly var hasDefaultValue : Bool;
    readonly var enumValue : Int;
}

struct RFunc {
    readonly var flags : Int;
    readonly var comments : DArray$<RComment>;
    readonly var name : raw*const Int8;
    readonly var pointer : raw* Void;
    readonly var returnType: raw*const Int8;
    readonly var params : DArray$<RField>;
    readonly var genericParams : DArray$<raw*const Int8>;
}

struct RType {
    readonly var flags : Int;
    readonly var comments : DArray$<RComment>;
    readonly var name : raw*const Int8;
    readonly var kind : Int;
    readonly var ctor: raw* Void;
    readonly var fields : DArray$<RField>;
    readonly var funcs : DArray$<RFunc>;
    readonly var inheritances : DArray$<raw*const Int8>;
    readonly var genericParams : DArray$<raw*const Int8>;
}

struct RModule {
    readonly var name : raw*const Int8;
    readonly var version : raw*const Int8;

    readonly var fields : DArray$<RField>;
    readonly var funcs : DArray$<RFunc>;
    readonly var types : DArray$<RType>;
}

extern fun findModule(name : raw*const Int8) : ref*? RModule;
