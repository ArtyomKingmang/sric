
extern fun alloc$<T>(): own* T;

extern fun init$<T>(p: raw* Void, freeMemory: fun(p: raw* Void)): own* T;

extern struct WeakPtr$<T> {
    fun set(p: own*? T);
    fun lock(): own*? T;
}

extern struct AutoMove$<T> {
    fun set(p: &T);
    fun take(): T;
    fun get(): &T;
}

extern struct SharedPtr$<T> {
    fun set(p: own*? T);
    fun get(): own*? T;
}

extern fun toShared$<T>(p: & own* T): SharedPtr$<T>;
extern fun autoMove$<T>(p: T): AutoMove$<T>;
extern fun toWeak$<T>(p: & own* T): WeakPtr$<T>;


extern fun share$<T>(p: & own* T): own* T;

extern unsafe fun rawToOwn$<T>(p: raw* T): own* T;

extern fun refToOwn$<T>(p: ref* T): own*? T;

extern unsafe fun rawToRef$<T>(p: raw* T): ref* T;
