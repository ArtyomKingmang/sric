
extern fun alloc$<T>(): own* T;

struct A {
    var i: Int = 1;
    var k: Int = 2;

    operator fun compare(b: & A) : Int {
        return i - b.i;
    }
}

fun testDerivativeRefable() {
    var a = alloc$<A>(){};
    var p2: * Int = &a.k;

    //printf("%d\n", *p2);
}

fun testDerivativeLocal() {
    var a: A;
    var p2: * Int = &a.k;

    //printf("%d\n", *p2);
}